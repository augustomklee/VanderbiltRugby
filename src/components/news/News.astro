---
import { instagramTokenManager } from '../../utils/instagramTokenManager';

interface InstagramPost {
  id: string;
  caption?: string;
  media_type: string;
  media_url: string;
  permalink: string;
  thumbnail_url?: string;
  timestamp: string;
}

const INSTAGRAM_TOKEN = import.meta.env.INSTAGRAM_ACCESS_TOKEN;
const INSTAGRAM_APP_SECRET = import.meta.env.INSTAGRAM_APP_SECRET;

// Constants for Instagram API
const INSTAGRAM_API_BASE_URL = 'https://graph.instagram.com';

async function getInstagramPosts(): Promise<InstagramPost[]> {
  try {
    // Get a valid token (will be cached and refreshed automatically)
    const token = await instagramTokenManager.getValidToken(INSTAGRAM_TOKEN, INSTAGRAM_APP_SECRET);
    
    // Use the token to fetch posts
    const response = await fetch(
      `${INSTAGRAM_API_BASE_URL}/me/media?fields=id,caption,media_type,media_url,permalink,thumbnail_url,timestamp&access_token=${token}`
    );
    
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    
    const data = await response.json();
    return data.data || [];
  } catch (error) {
    console.error("Error fetching Instagram posts:", error);
    return [];
  }
}

const posts = await getInstagramPosts();
---

<div class="news__wrapper">
  <div class="news__header">
    <h2 class="news__title">Latest from Instagram</h2>
    <a
      href="https://www.instagram.com/vandyrugby/"
      class="news__link"
      target="_blank">@vandyrugby</a
    >
  </div>
  <div class="news__grid">
    {
      posts.length > 0
        ? posts.slice(0, 8).map((post: InstagramPost) => (
            <a
              href={post.permalink}
              target="_blank"
              rel="noopener noreferrer"
              class="news__card"
            >
              <img
                src={post.media_url}
                alt={post.caption?.slice(0, 100) || ""}
                class="news__image"
              />
              {post.caption && (
                <p class="news__caption">
                  {post.caption.slice(0, 100)}
                  {post.caption.length > 100 ? "..." : ""}
                </p>
              )}
            </a>
          ))
        : Array(8)
            .fill(null)
            .map(() => (
              <div class="news__card news__card--loading">
                <div class="news__image--placeholder" />
                <div class="news__caption--placeholder" />
              </div>
            ))
    }
  </div>
</div>

<style>
  .news__wrapper {
    margin: 2rem auto;
    padding-inline: 2rem;
    width: 80%;
  }
  .news__header {
    display: flex;
    justify-content: space-between;
    margin-bottom: 1.5rem;
  }

  @media (max-width: 425px) {
    .news__header {
      flex-direction: column; */
    }
  }

  .news__title {
    margin: 0;
  }

  .news__link {
    font-size: var(--fs-300);
    color: var(--clr-white);
    text-decoration: none;
    margin-top: auto;
  }

  .news__link:hover {
    color: var(--clr-gold);
  }

  .news__grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 2fr));
    gap: 1.5rem;
    padding: 0;
    margin: 0;
  }

  @media (max-width: 999px) {
    .news__card:nth-child(n + 5) {
      display: none;
    }
  }

  @media (max-width: 1340px) {
    .news__card:nth-child(n + 7) {
      display: none;
    }
  }

  @media (min-width: 1441px) {
    .news__grid {
      grid-template-columns: repeat(4, minmax(250px, 1fr));
    }

    .news__wrapper {
      width: 1200px;
    }
  }

  .news__card {
    background: var(--clr-gold);
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transition: 0.2s ease;
    text-decoration: none;
    color: inherit;
  }

  .news__card:hover {
    transform: scale(1.01);
  }

  .news__image {
    width: 100%;
    height: 18rem;
    object-fit: cover;
    margin: 0;
  }

  .news__caption {
    font-size: var(--fs-400);
    color: var(--clr-black);
    margin-top: 0.25rem;
    margin-bottom: 0.7rem;
    margin-inline: 1rem;
  }

  /* Loading state styles */
  .news__card--loading {
    pointer-events: none;
  }

  .news__image--placeholder {
    width: 100%;
    background: linear-gradient(90deg, #f0f0f0 0%, #f8f8f8 50%, #f0f0f0 100%);
    background-size: 200% 100%;
    animation: shimmer 1.5s infinite;
  }

  .news__caption--placeholder {
    height: 3rem;
    margin: 1rem;
    background: linear-gradient(90deg, #f0f0f0 0%, #f8f8f8 50%, #f0f0f0 100%);
    background-size: 200% 100%;
    animation: shimmer 1.5s infinite;
  }

  @keyframes shimmer {
    0% {
      background-position: -200% 0;
    }
    100% {
      background-position: 200% 0;
    }
  }
</style>
